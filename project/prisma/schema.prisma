generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Shipment {
  id                Int      @id @default(autoincrement())
  trackingId        String   @unique
  
  // Basic form fields
  awbNumber         String
  agency            String?
  office            String?
  senderName        String
  senderAddress     String
  recipientName     String
  recipientAddress  String
  destination       String
  
  // Shipping details
  deliveryTime      String?
  invoiceStatus     String?
  deliveryStatus    String?
  shippingMode      String?
  packaging         String?
  vendor            String?
  serviceMode       String?
  
  // Package information
  amount            Int      @default(1)
  packageDescription String?
  weight            Float    @default(0)
  length            Float    @default(0)
  width             Float    @default(0)
  height            Float    @default(0)
  weightVol         Float    @default(0)
  fixedCharge       Float    @default(0)
  decValue          Float    @default(0)
  
  // Pricing information
  price             Float    @default(0)
  discount          Float    @default(0)
  fuelSurcharge     Float    @default(0)
  insurance         Float    @default(0)
  customs           Float    @default(0)
  tax               Float    @default(0)
  declaredValue     Float    @default(0)
  reissue           Float    @default(0)
  
  // Calculated values
  totalCost         Float
  subtotal          Float    @default(0)

  // Metadata
  manualRate        Boolean  @default(false)
  totalPackages     Int      @default(0)
  totalWeight       Float    @default(0)
  totalWeightVol    Float    @default(0)
  
  // JSON fields for complex data
  packages          Json?    // Array of package objects
  packageTotals     Json?    // Totals object
  calculatedValues  Json?    // Calculated values object
  
  createdAt         DateTime @default(now())
}

model Customers {
  id                Int      @id @default(autoincrement()) 
  CompanyName       String  @unique
  PersonName        String
  Email             String   
  Phone             String
  DocumentType      String
  DocumentNumber    String
  Country           String
  State             String
  City              String
  Zip               String
  Address           String
  ActiveStatus      String
  FilePath          String   
  createdAt         DateTime @default(now())
}


model Vendors {
  id                Int      @id @default(autoincrement()) 
  CompanyName       String  @unique
  PersonName        String
  Email             String   
  Phone             String
  Country           String
  State             String
  City              String
  Zip               String
  Address           String
  createdAt         DateTime @default(now())
}

model Recipients {
  id                Int      @id @default(autoincrement()) 
  CompanyName       String   @unique
  PersonName        String
  Email             String   
  Phone             String
  Country           String
  State             String
  City              String
  Zip               String
  Address           String
  createdAt         DateTime @default(now())
}

model DeliveryTime {
  id        Int   @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
}

model InvoiceStatus {
  id        Int   @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
}

model DeliveryStatus {
  id        Int   @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
}

model ShippingMode {
  id        Int   @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
}

model PackagingType {
  id        Int   @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
}


model ServiceMode {
  id        Int   @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
}

model Zone {
  id        Int   @id @default(autoincrement())
  code      String
  country   String
  zone      String
  service   String
  phoneCode String?
}

model ZoneUpload {
  id        Int      @id @default(autoincrement())
  service   String   @unique
  uploadedAt DateTime @default(now())
}

model Rate {
  id         Int     @id @default(autoincrement())
  weight     Float
  vendor    String
  service   String
  zone       Int
  price      Int
  docType    String
}

model filename {
  id Int @id @default(autoincrement())
  filename String
  vendor String
  service String
  fileType String // "rate" or "zone"
  uploadedAt DateTime @default(now())
  
  @@unique([service, fileType])
}

model vendorservice{
  id Int @id @default(autoincrement())
  vendor String
  service String
}

/// Accounts module: Payments
enum TransactionType {
  INCOME
  EXPENSE
  TRANSFER
}

enum PartyType {
  US
  CUSTOMER
  VENDOR
}

enum PaymentMode {
  CASH
  BANK_TRANSFER
  CARD
  CHEQUE
}

model Payment {
  id              Int              @id @default(autoincrement())
  transactionType TransactionType
  category        String
  date            DateTime
  currency        String
  amount          Float

  // From: Customer or Us
  fromPartyType   PartyType
  fromCustomerId  Int?
  fromCustomer    String

  // To: Vendor or Us
  toPartyType     PartyType
  toVendorId      Int?
  toVendor        String

  mode            PaymentMode?
  reference       String?
  dueDate         DateTime?
  description     String?

  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}